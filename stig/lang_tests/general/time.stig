/* <stig/lang_tests/general/time.stig>

   An implementation of time_diff portion of Stig script.

   Copyright 2010-2014 Stig LLC

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License. */


/* TimePnt constructor */

epoch = {1970-01-01T00:00:00Z};
epoch0 = {1970-01-01T09:00:00+09:00};
epoch1 = {1969-12-31T16:00:00-08:00};
epoch2 = time_pnt(.year: 1970, .month: 1, .day: 1, .hour: 0, .minute: 0, .second: 0, .nanosecond:0, .utc_offset: 0);
epoch3 = time_pnt(.year: 1970, .month: 1, .day: 1, .hour: 9, .minute: 0, .second: 0, .nanosecond:0, .utc_offset: 540);
epoch4 = time_pnt(.year: 1969, .month: 12, .day: 31, .hour: 16, .minute: 0, .second: 0, .nanosecond:0, .utc_offset: -480);

/* TimePnt == TimePnt */
test {
  eqeq00: epoch == epoch0;
  eqeq01: epoch == epoch1;
  eqeq02: epoch == epoch2;
  eqeq03: epoch == epoch3;
  eqeq04: epoch == epoch4;
};

/* Before epoch */
before_epoch0 = {1947-09-09T23:08:52-08:00};
before_epoch1 = {1950-06-25T12:20:10+09:00};
before_epoch2 = {1963-09-31T02:04:20+14:00};
/* After epoch */
after_epoch0 = {1988-01-28T08:20:54-12:00};
after_epoch1 = {1990-08-30T20:58:32+09:00};
after_epoch2 = {1993-03-11T00:00:00Z};

/* now */
cur = now;

/* TimePnt comp TimePnt */
test {
  neq: epoch != cur;
  lt00: before_epoch0 < epoch;
  lt01: before_epoch1 < epoch;
  lteq02: before_epoch2 <= epoch;
  gt00: after_epoch0 > epoch;
  gt01: after_epoch1 > epoch;
  gt02: cur > epoch;
  gteq02: after_epoch2 >= epoch;
};

/* TimeDiff constructor */
forward_five_days = {+5T0:0:0};
forward_five_days0 = {5T0:0:0};
forward_five_days1 = {+0T120:0:0};
forward_five_days2 = {0T0:7200:0};
forward_five_days3 = {+0T0:0:432000};
forward_five_days4 = time_diff(.is_forward: true, .day: 5, .hour: 0, .minute: 0, .second: 0, .nanosecond:0);
forward_five_days5 = time_diff(.is_forward: true, .day: 0, .hour: 120, .minute: 0, .second: 0, .nanosecond:0);
forward_five_days6 = time_diff(.is_forward: true, .day: 0, .hour: 0, .minute: 7200, .second: 0, .nanosecond:0);
forward_five_days7 = time_diff(.is_forward: true, .day: 0, .hour: 0, .minute: 0, .second: 432000, .nanosecond:0);

/* TimeDiff == TimeDiff */
test {
  forward00: forward_five_days == forward_five_days0;
  forward01: forward_five_days == forward_five_days1;
  forward02: forward_five_days == forward_five_days2;
  forward03: forward_five_days == forward_five_days3;
  forward04: forward_five_days == forward_five_days4;
  forward05: forward_five_days == forward_five_days5;
  forward06: forward_five_days == forward_five_days6;
  forward07: forward_five_days == forward_five_days7;
};

backward_five_days = {-5T0:0:0};

time_diff0 = {+23T32:0:3600};
time_diff1 = {+365T20:293:11};
time_diff2 = {-213T0:12:63};
time_diff3 = {-13T0:12:10};

/* TestDiff comp TestDiff */
test {
  time_diff06: forward_five_days > {0T0:0:0};
  time_diff07: backward_five_days < {0T0:0:0};
};

/* Operations */

/* TimePnt - TimePnt -> TimeDiff */
test {
  time_diff00: epoch - before_epoch0 > {0T0:0:0};
  time_diff01: epoch - before_epoch1 > {0T0:0:0};
  time_diff02: epoch - before_epoch2 > {0T0:0:0};
  time_diff03: epoch - after_epoch0 < {0T0:0:0};
  time_diff04: epoch - after_epoch1 < {0T0:0:0};
  time_diff05: epoch - after_epoch2 < {0T0:0:0};
};

/* TimePnt + TimeDiff -> TimePnt */
test {
  time_pnt15: before_epoch0 + forward_five_days == {1947-09-14T23:08:52-08:00};
  time_pnt16: after_epoch0 + backward_five_days == {1988-01-23T08:20:54-12:00};
};

/* TimeDiff + TimeDiff */
test {
  time_diff_add00: forward_five_days + backward_five_days == {0T0:0:0};
};

/* TimeDiff - TimeDiff */
test {
  time_diff_sub00: forward_five_days - backward_five_days == {10T0:0:0};
};

/* Insert into set and object to test hash */
test {
  time_pnt_set: ({epoch, now} & {epoch}) == {epoch};
  time_pnt_obj: <{.name: "foo", .start_time: epoch}>.start_time == epoch;
  time_diff_set: ({forward_five_days, backward_five_days} & {forward_five_days}) == {forward_five_days};
  time_diff_obj: <{.name: "bar", .diff: backward_five_days}>.diff == backward_five_days;
};

/* time_* -> str; str -> time_* */
test {
  time_diff_to_str: forward_five_days as str == "+5T0:0:0";
  time_pnt_to_str: epoch as str == "1970-1-1T0:0:0Z";
  str_to_time_diff: "+5T0:0:0" as time_diff == forward_five_days;
  str_to_time_pnt: "1970-1-1T0:0:0Z" as time_pnt == epoch;
  time_diff_loop: forward_five_days as str as time_diff == forward_five_days;
  time_pnt_loop: epoch as str as time_pnt == epoch;
};

epoch_plus_12_ms = {1970-01-01T00:00:00.012Z};
epoch_plus_120_ms = {1970-01-01T00:00:00.12Z};
epoch_plus_12_ctor = time_pnt(.year: 1970, .month: 1, .day: 1, .hour: 0, .minute: 0, .second: 0, .nanosecond:12, .utc_offset: 0);
epoch_plus_120_ctor = time_pnt(.year: 1970, .month: 1, .day: 1, .hour: 0, .minute: 0, .second: 0, .nanosecond:120, .utc_offset: 0);

forward_five_and_12_ms = {+5T0:0:0.012};
forward_five_and_120_ms = {+5T0:0:0.12};
forward_five_and_12_ctor = time_diff(.is_forward: true, .day: 5, .hour: 0, .minute: 0, .second: 0, .nanosecond:12);
forward_five_and_120_ctor = time_diff(.is_forward: true, .day: 5, .hour: 0, .minute: 0, .second: 0, .nanosecond:120);

/* Nanoseconds to str conversion */
test {
 ms_tD_to_str_12a: forward_five_and_12_ms as str == "+5T0:0:0.012000000";
 ms_tD_to_str_12b: forward_five_and_120_ms as str == "+5T0:0:0.120000000";
 ms_tD_to_str_12c: forward_five_and_12_ctor as str == "+5T0:0:0.000000012";
 ms_tD_to_str_12d: forward_five_and_120_ctor as str == "+5T0:0:0.000000120";

 ms_tP_to_str_12a: epoch_plus_12_ms as str == "1970-1-1T0:0:0.012000000Z";
 ms_tP_to_str_12b: epoch_plus_120_ms as str == "1970-1-1T0:0:0.120000000Z";
 ms_tP_to_str_12c: epoch_plus_12_ctor as str == "1970-1-1T0:0:0.000000012Z";
 ms_tP_to_str_12d: epoch_plus_120_ctor as str == "1970-1-1T0:0:0.000000120Z";

 ms_TD_loop: forward_five_and_12_ms as str as time_diff == forward_five_and_12_ms;
 ms_TP_loop: epoch_plus_12_ms as str as time_pnt == epoch_plus_12_ms;
};


/* Time_pnt with Nanoseconds added tests */
test {
  nano_diff_same: {+1T0:0:0} == {+1T0:0:0.000};
  nano_diff_same1: {+1T0:0:0.000} == {+1T0:0:0.000000000};
  nano_diff_same2: {+1T0:0:0.000000000} == {+1T0:0:0.000000000};
  nano_point_same: {2012-05-07T0:0:0Z} == {2012-05-07T0:0:0.000Z};
  nano_point_same1: {2012-05-07T0:0:0.000Z} == {2012-05-07T0:0:0.000000000Z};
  nano_point_same2: {2012-05-07T0:0:0.000000000Z} == {2012-05-07T0:0:0.000000000Z};
  nano_less_than: {2012-05-07T0:0:0Z} < {2012-05-07T0:0:0.010Z};
  nano_less_than1: {2012-05-07T0:0:0.01Z} < {2012-05-07T0:0:0.01010101Z};
  nano_less_than2: {2012-05-07T0:0:0.11111Z} < {2012-05-07T0:0:0.111111111Z};
  nano_greater_than: {2012-05-07T0:0:0.1Z} > {2012-05-07T0:0:0.01Z};
  nano_greater_than1: {2012-05-07T0:0:0.1Z} > {2012-05-07T0:0:0.010000001Z};
  nano_greater_than2: {2012-05-07T0:0:0.100000002Z} > {2012-05-07T0:0:0.100000001Z};
  nano_precision: {2012-05-07T0:0:0.010Z} == {2012-05-07T0:0:0.01Z};
  nano_precision1: {2012-05-07T0:0:3.14159Z} == {2012-05-07T0:0:3.141590000Z};
  nano_addition: {2012-05-07T0:0:0Z} + {+0T0:0:0.01} == {2012-05-07T0:0:0.010Z};
  nano_addition1: {2012-05-07T0:0:0Z} + {+0T0:0:0.123456789} == {2012-05-07T0:0:0.123456789Z};
  nano_subtraction: {2012-05-07T0:0:0Z} - {+0T0:0:0.001} == {2012-05-06T23:59:59.999Z};
  nano_subtraction1: {2012-05-07T0:0:0Z} - {+0T0:0:0.000000001} == {2012-05-06T23:59:59.999999999Z};
  nano_subtract_precision: {2012-05-07T0:0:0Z} - {+0T0:0:0.01} == {2012-05-06T23:59:59.990Z};
};

/* Testing the time_obj keyword */
epoch_as_obj = time_obj epoch;
five_d_as_obj = time_obj forward_five_days;

test {
 pnt_obj1: epoch_as_obj.year == 1970;
 diff_obj1: five_d_as_obj.nanosecond == 0;
 diff_obj2: five_d_as_obj.day == 5;

 pnt_obj_kwd1: (time_obj epoch).year == 1970;
 pnt_obj_kwd2: (time_obj {1970-01-01T12:34:56Z}).year == 1970;
 diff_obj_kwd1: (time_obj {+2T0:0:0}).nanosecond == 0;

 add_obj1: (time_obj ({1970-01-01T12:34:56Z} + {+365T0:0:0})).year == 1971;

};